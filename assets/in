#!/bin/bash
# vim: set ft=sh

set -e -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

destination=$1

if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp /tmp/resource-in.XXXXX)

cat > $payload <&0

load_pubkey $payload

uri=$(jq -r '.uri // ""' < $payload)
branch=$(jq -r '.branch // ""' < $payload)
ref=$(jq -r '.ref // "HEAD"' < $payload)

if [ -z "$uri" ]; then
  echo "invalid payload (missing uri):" >&2
  cat $payload >&2
  exit 1
fi

branchflag=""
if [ -n "$branch" ]; then
  branchflag="--branch $branch"
fi

git clone $uri $branchflag $destination --depth 10

cd $destination

git checkout $ref
git clean --force --force -d
git submodule update --init --recursive

jq -n "{
  uri: $(git ls-remote --get-url origin | jq -R .),
  branch: $(jq '.branch' < $payload),
  ref: $(git rev-parse HEAD | jq -R .),
  private_key: $(jq '.private_key' < $payload)
}" >&3
